lorem de imagem: "https://picsum.photos/200/200"
imagem feitas -> https://undraw.co/search 
paleta de cores -> https://color.adobe.com/explore
icone -> https://www.flaticon.com/
joguinho -> https://flexboxfroggy.com/#pt-br
site das sombras -> https://www.cssmatic.com/box-shadow 
freepik e pixels -> images


######### os tamanhos das telas #########
/* Smartphones (600px para baixo) */
@media only screen and (max-width: 600px) {...}

/* Dispositivos um pouco maiores, mas ainda pequenos (Pequenos Tablets e Smartphones + largos, 600px para cima) */
@media only screen and (min-width: 600px) {...}

/*Dispostivos Médios (Tablets deitados, 768px para cima) */
@media only screen and (min-width: 768px) {...}

/* Dispostivos Largos (laptops/desktops, 992px para cima) */
@media only screen and (min-width: 992px) {...}

/* Super Largos (Telas maiores laptops, desktops e até TVs, 1200px para cima) */
@media only screen and (min-width: 1200px) {...}
####################################################
ESPECIFICIDADE NO CSS,    NO HTML O CSS DIRETO VALE MAIS
ID 
TAG.CLASS
.CLASS 
TAG 


li.dropdown  li com dropdown
 
.botao {
    text-decoration: none; TIRA O TRACEJADO
}

.botao:hover {

}

.test {

    max-width: 800px;

}


Para imagem
background: url('path');
background-size: cover;
opacity: 0.0 até 1.0     conceito de visibilidade de cor


.texto {
    text-align: justify;
    text-transform: uppercase; formato das letras, a primeira maiuscula, todas maiuscula
    text-indent: 80px; deixa o espaçmento de parágrafo, tab
    letter-spacing: 5px; espaçamento entre letras
    line-heigth: 10px; espaçamento entre linhas


    white-space: nowrap; vai colocar o texto em uma linha
    text-overflow: ellipsis; vai colocar o ... se o texto tiver maior que a caixa
    text-overflow: normal; vai voltar ao normal

}

essa propriedade só vai funcionar quando tiver a tag 'a' e a classe 'botao1'
a.botao1 {

}

cursor: mouse

inline  -- ele fica organizado em formato de linha. Obs.: algumas propriedades não funciona no inline. width, ...
block   -- ele fica organizado em formato de coluna
inline-block -- ele fica organizado em formato de linha, porém usa propriedades do block, aceitando algumas funcionalidades de width

FLEX - ele tem os dois, direction - row column. 
flex-flow: row wrap  -> wrap para dizer o comportamente é de deixar dentro da tela
justify-context: flex-end alinha na horizontal
align-itens: alinha na vertical
align-content: alinha o grupo todo,, mesmo q itens
flex-grow: o crescimento da div filho, na div filho ->   1 - uniforme
box-sizing: border-box -> padrão pra margem e sei lá
flex: dizer o tamanho das divs filho

display:     ele oculta da tela, não ocupa espaço 
visibility: hidden;      ele oculta da tela, porém continua ocupando espaço 


{
    relative é em relação a si mesmo
    absolute é em relação ao seu ancestral mais próximo
    fixed is positioned relative to the viewport
    sticky é gruda no ancestral mais próximo, usado no scrool da tela is positioned based on the user's scroll position

    position: relative;  absolute;   sticky;         
    left:40px;       - variando a posição
    z-index:4;     em qual camada ele estar, tipo no canvas a posição um em cima do outro

}


Propriedade Overflow
hidden -> oculta o conteúdo que passou da tela
scroll -> cria o scroll idenpendente se vai usar ou não
visible -> deixa visivel mesmo passando por cima de outros  (padrão)
auto -> ele é o scroll só quando for necessário


Propriedade FLOAT
è parecido quando vai colocar uma imagem no word que do lado contém texto
Float: left ... vai colocar o conteúdo(ex.: imagem) no lado esquerdo
clear:both; -> esse parâmetro ele meio que diz que apartir daquele elemento vai pular o float e colocar o restante do conteúdo em baixo
Interessante que ele tem preferência pra colocar esse elemento primeiro, 


transition-property: all;
transition-duration: 2s;
transition-timing-function: ease-out;
transition-delay: 0s;
completo -> transition: all 2s ease-out 0;

transform: translateX(400px);